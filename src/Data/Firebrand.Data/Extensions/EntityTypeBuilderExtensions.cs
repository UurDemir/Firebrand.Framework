
using Microsoft.EntityFrameworkCore.Metadata.Builders;

using System.Linq.Expressions;

namespace Firebrand.Data.Extensions;

/// <summary>  
/// Provides extension methods for the <see cref="EntityTypeBuilder{TEntity}"/> class.  
/// </summary>  
public static class EntityTypeBuilderExtensions
{
    /// <summary>  
    /// Configures the specified property as an auto-generated identity key.  
    /// </summary>  
    /// <typeparam name="TEntity">The type of the entity being configured.</typeparam>  
    /// <param name="builder">The builder being used to configure the entity type.</param>  
    /// <param name="keyExpression">An expression that identifies the property to be used as the key.</param>  
    public static void AutoGeneratedIdentity<TEntity>(this EntityTypeBuilder<TEntity> builder, Expression<Func<TEntity, object?>> keyExpression) where TEntity : class
    {
        builder.HasKey(keyExpression);
        builder.Property(keyExpression)
            .ValueGeneratedOnAdd();
    }
}
